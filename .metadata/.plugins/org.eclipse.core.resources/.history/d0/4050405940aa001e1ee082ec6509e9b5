package com.Rental_Project.services;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.Rental_Project.models.Messages;
import com.Rental_Project.repository.MessageProxy;
import com.Rental_Project.repository.MessageRepository;

import lombok.Data;

@Data
@Service
public class MessagesServices {
    @Autowired
    private MessageRepository messageRepository;

    public Optional<Messages> getmessage(final Long id) {
        return messageRepository.findById(id);
    }

    public Iterable<Messages> getMessages() {
        return messageRepository.findAll();
    }

    public void deleteMessage(final Long id) {
    	messageRepository.deleteById(id);
    }

    public Messages saveMessage(Messages message) {
        Messages savedMessage = messageRepository.save(message);
        return savedMessage;
    }
    
    
    

    @Autowired
    private MessageProxy messageProxy;

    public Messages getMessage(final int id) {
        return messageProxy.getMessages(id);
    }

    public Iterable<Messages> getMessage() {
        return messageProxy.getMessages();
    }

    public void deletemessage(final int id) {
    	messageProxy.deletemessage(id);
    }

     public Employee saveEmployee(Employee employee) {
        Employee savedEmployee;

        // Règle de gestion : Le nom de famille doit être mis en majuscule.
        employee.setLastName(employee.getLastName().toUpperCase());

        if(employee.getId() == null) {
            // Si l'id est nul, alors c'est un nouvel employé.
            savedEmployee = employeeProxy.createEmployee(employee);
        } else {
            savedEmployee = employeeProxy.updateEmployee(employee);
        }
    
        return savedEmployee;
    }

}
